name: Test and Build Phase

on: [ push, pull_request ]

jobs:

  test:
    runs-on: self-hosted
    outputs:
      starttime: ${{ steps.Get_current_date.outputs.start }}
    steps:
      - name: Get_current_date
        id: date
        run: echo "::set-output name=start::$(date +'%Y-%m-%d-%s %T')"

      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt

      - uses: actions/checkout@v2

      - name: Run Tests
        run: |
          cd djangoproject
          python3 manage.py behave

  build:
    needs: test
    defaults:
      run:
        working-directory: frontend

    name: Build
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: echo hello # yarn --prefer-offline

      - name: Build frontend
        run: echo hello # npm run build

  notify:
    needs: build
    name: Discord Notification
    runs-on: self-hosted
    steps:
    - name: Discord Notification
      if: ${{ success() }}
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      run: |
        pip3 install -r requirements.txt
        python3 .github/discord_python/discord_bot.py -t ${{ needs.test.outputs.starttime }} -b ${{ github.ref_name }} -s 'success' -p ${{ github.job }} -a ${{ github.actor }}
    - name: Discord Notification
      if: ${{ failure() }}
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      run: |
        pip3 install -r requirements.txt
        python3 .github/discord_python/discord_bot.py -t ${{ needs.test.outputs.starttime }} -b ${{ github.ref_name }} -s 'fail' -p ${{ runner.name }} -a ${{ github.actor }}